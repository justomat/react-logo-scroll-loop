// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Gradient from "./Gradient";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";

function style(prim0, prim1, prim2, prim3, prim4, prim5, prim6, prim7, prim8, prim9, prim10, prim11, prim12, prim13, prim14, prim15, prim16, prim17, prim18, prim19, prim20, prim21, prim22, prim23, prim24, prim25, prim26, prim27, prim28, prim29, prim30, prim31, prim32, prim33, prim34, prim35, prim36, prim37, prim38, prim39, prim40, prim41, prim42, prim43, prim44, prim45, prim46, prim47, prim48, prim49, prim50, prim51, prim52, prim53, prim54, prim55, prim56, prim57, prim58, prim59, prim60, prim61, prim62, prim63, prim64, prim65, prim66, prim67, prim68, prim69, prim70, prim71, prim72, prim73, prim74, prim75, prim76, prim77, prim78, prim79, prim80, prim81, prim82, prim83, prim84, prim85, prim86, prim87, prim88, prim89, prim90, prim91, prim92, prim93, prim94, prim95, prim96, prim97, prim98, prim99, prim100, prim101, prim102, prim103, prim104, prim105, prim106, prim107, prim108, prim109, prim110, prim111, prim112, prim113, prim114, prim115, prim116, prim117, prim118, prim119, prim120, prim121, prim122, prim123, prim124, prim125, prim126, prim127, prim128, prim129, prim130, prim131, prim132, prim133, prim134, prim135, prim136, prim137, prim138, prim139, prim140, prim141, prim142, prim143, prim144, prim145, prim146, prim147, prim148, prim149, prim150, prim151, prim152, prim153, prim154, prim155, prim156, prim157, prim158, prim159, prim160, prim161, prim162, prim163, prim164, prim165, prim166, prim167, prim168, prim169, prim170, prim171, prim172, prim173, prim174, prim175, prim176, prim177, prim178, prim179, prim180, prim181, prim182, prim183, prim184, prim185, prim186, prim187, prim188, prim189, prim190, prim191, prim192, prim193, prim194, prim195, prim196, prim197, prim198, prim199, prim200, prim201, prim202, prim203, prim204, prim205, prim206, prim207, prim208, prim209, prim210, prim211, prim212, prim213, prim214, prim215, prim216, prim217, prim218, prim219, prim220, prim221, prim222, prim223, prim224, prim225, prim226, prim227, prim228, prim229, prim230, prim231, prim232, prim233, prim234, prim235, prim236, prim237, prim238, prim239, prim240, prim241, prim242, prim243, prim244, prim245, prim246, prim247, prim248, prim249, prim250, prim251, prim252, prim253, prim254, prim255, prim256, prim257, prim258, prim259, prim260, prim261, prim262, prim263, prim264, prim265, prim266, prim267, prim268, prim269, prim270, prim271, prim272, prim273, prim274, prim275, prim276, prim277, prim278, prim279, prim280, prim281, prim282, prim283, prim284, prim285, prim286, prim287, prim288, prim289, prim290, prim291, prim292, prim293, prim294, prim295, prim296, prim297, prim298, prim299, prim300, prim301, prim302, prim303, prim304, prim305, prim306, prim307, prim308, prim309, prim310, prim311, prim312, prim313, prim314, prim315, prim316, prim317, prim318, prim319, prim320, prim321, prim322, prim323, prim324, prim325, prim326, prim327, prim328, prim329, prim330, prim331, prim332, prim333, prim334, prim335, prim336, prim337, prim338, prim339, prim340, prim341, prim342, prim343, prim344, prim345, prim346, prim347) {
  var tmp = {};
  if (prim0 !== undefined) {
    tmp.azimuth = prim0;
  }
  if (prim1 !== undefined) {
    tmp.background = prim1;
  }
  if (prim2 !== undefined) {
    tmp.backgroundAttachment = prim2;
  }
  if (prim3 !== undefined) {
    tmp.backgroundColor = prim3;
  }
  if (prim4 !== undefined) {
    tmp.backgroundImage = prim4;
  }
  if (prim5 !== undefined) {
    tmp.backgroundPosition = prim5;
  }
  if (prim6 !== undefined) {
    tmp.backgroundRepeat = prim6;
  }
  if (prim7 !== undefined) {
    tmp.border = prim7;
  }
  if (prim8 !== undefined) {
    tmp.borderCollapse = prim8;
  }
  if (prim9 !== undefined) {
    tmp.borderColor = prim9;
  }
  if (prim10 !== undefined) {
    tmp.borderSpacing = prim10;
  }
  if (prim11 !== undefined) {
    tmp.borderStyle = prim11;
  }
  if (prim12 !== undefined) {
    tmp.borderTop = prim12;
  }
  if (prim13 !== undefined) {
    tmp.borderRight = prim13;
  }
  if (prim14 !== undefined) {
    tmp.borderBottom = prim14;
  }
  if (prim15 !== undefined) {
    tmp.borderLeft = prim15;
  }
  if (prim16 !== undefined) {
    tmp.borderTopColor = prim16;
  }
  if (prim17 !== undefined) {
    tmp.borderRightColor = prim17;
  }
  if (prim18 !== undefined) {
    tmp.borderBottomColor = prim18;
  }
  if (prim19 !== undefined) {
    tmp.borderLeftColor = prim19;
  }
  if (prim20 !== undefined) {
    tmp.borderTopStyle = prim20;
  }
  if (prim21 !== undefined) {
    tmp.borderRightStyle = prim21;
  }
  if (prim22 !== undefined) {
    tmp.borderBottomStyle = prim22;
  }
  if (prim23 !== undefined) {
    tmp.borderLeftStyle = prim23;
  }
  if (prim24 !== undefined) {
    tmp.borderTopWidth = prim24;
  }
  if (prim25 !== undefined) {
    tmp.borderRightWidth = prim25;
  }
  if (prim26 !== undefined) {
    tmp.borderBottomWidth = prim26;
  }
  if (prim27 !== undefined) {
    tmp.borderLeftWidth = prim27;
  }
  if (prim28 !== undefined) {
    tmp.borderWidth = prim28;
  }
  if (prim29 !== undefined) {
    tmp.bottom = prim29;
  }
  if (prim30 !== undefined) {
    tmp.captionSide = prim30;
  }
  if (prim31 !== undefined) {
    tmp.clear = prim31;
  }
  if (prim32 !== undefined) {
    tmp.clip = prim32;
  }
  if (prim33 !== undefined) {
    tmp.color = prim33;
  }
  if (prim34 !== undefined) {
    tmp.content = prim34;
  }
  if (prim35 !== undefined) {
    tmp.counterIncrement = prim35;
  }
  if (prim36 !== undefined) {
    tmp.counterReset = prim36;
  }
  if (prim37 !== undefined) {
    tmp.cue = prim37;
  }
  if (prim38 !== undefined) {
    tmp.cueAfter = prim38;
  }
  if (prim39 !== undefined) {
    tmp.cueBefore = prim39;
  }
  if (prim40 !== undefined) {
    tmp.cursor = prim40;
  }
  if (prim41 !== undefined) {
    tmp.direction = prim41;
  }
  if (prim42 !== undefined) {
    tmp.display = prim42;
  }
  if (prim43 !== undefined) {
    tmp.elevation = prim43;
  }
  if (prim44 !== undefined) {
    tmp.emptyCells = prim44;
  }
  if (prim45 !== undefined) {
    tmp.float = prim45;
  }
  if (prim46 !== undefined) {
    tmp.font = prim46;
  }
  if (prim47 !== undefined) {
    tmp.fontFamily = prim47;
  }
  if (prim48 !== undefined) {
    tmp.fontSize = prim48;
  }
  if (prim49 !== undefined) {
    tmp.fontSizeAdjust = prim49;
  }
  if (prim50 !== undefined) {
    tmp.fontStretch = prim50;
  }
  if (prim51 !== undefined) {
    tmp.fontStyle = prim51;
  }
  if (prim52 !== undefined) {
    tmp.fontVariant = prim52;
  }
  if (prim53 !== undefined) {
    tmp.fontWeight = prim53;
  }
  if (prim54 !== undefined) {
    tmp.height = prim54;
  }
  if (prim55 !== undefined) {
    tmp.left = prim55;
  }
  if (prim56 !== undefined) {
    tmp.letterSpacing = prim56;
  }
  if (prim57 !== undefined) {
    tmp.lineHeight = prim57;
  }
  if (prim58 !== undefined) {
    tmp.listStyle = prim58;
  }
  if (prim59 !== undefined) {
    tmp.listStyleImage = prim59;
  }
  if (prim60 !== undefined) {
    tmp.listStylePosition = prim60;
  }
  if (prim61 !== undefined) {
    tmp.listStyleType = prim61;
  }
  if (prim62 !== undefined) {
    tmp.margin = prim62;
  }
  if (prim63 !== undefined) {
    tmp.marginTop = prim63;
  }
  if (prim64 !== undefined) {
    tmp.marginRight = prim64;
  }
  if (prim65 !== undefined) {
    tmp.marginBottom = prim65;
  }
  if (prim66 !== undefined) {
    tmp.marginLeft = prim66;
  }
  if (prim67 !== undefined) {
    tmp.markerOffset = prim67;
  }
  if (prim68 !== undefined) {
    tmp.marks = prim68;
  }
  if (prim69 !== undefined) {
    tmp.maxHeight = prim69;
  }
  if (prim70 !== undefined) {
    tmp.maxWidth = prim70;
  }
  if (prim71 !== undefined) {
    tmp.minHeight = prim71;
  }
  if (prim72 !== undefined) {
    tmp.minWidth = prim72;
  }
  if (prim73 !== undefined) {
    tmp.orphans = prim73;
  }
  if (prim74 !== undefined) {
    tmp.outline = prim74;
  }
  if (prim75 !== undefined) {
    tmp.outlineColor = prim75;
  }
  if (prim76 !== undefined) {
    tmp.outlineStyle = prim76;
  }
  if (prim77 !== undefined) {
    tmp.outlineWidth = prim77;
  }
  if (prim78 !== undefined) {
    tmp.overflow = prim78;
  }
  if (prim79 !== undefined) {
    tmp.overflowX = prim79;
  }
  if (prim80 !== undefined) {
    tmp.overflowY = prim80;
  }
  if (prim81 !== undefined) {
    tmp.padding = prim81;
  }
  if (prim82 !== undefined) {
    tmp.paddingTop = prim82;
  }
  if (prim83 !== undefined) {
    tmp.paddingRight = prim83;
  }
  if (prim84 !== undefined) {
    tmp.paddingBottom = prim84;
  }
  if (prim85 !== undefined) {
    tmp.paddingLeft = prim85;
  }
  if (prim86 !== undefined) {
    tmp.page = prim86;
  }
  if (prim87 !== undefined) {
    tmp.pageBreakAfter = prim87;
  }
  if (prim88 !== undefined) {
    tmp.pageBreakBefore = prim88;
  }
  if (prim89 !== undefined) {
    tmp.pageBreakInside = prim89;
  }
  if (prim90 !== undefined) {
    tmp.pause = prim90;
  }
  if (prim91 !== undefined) {
    tmp.pauseAfter = prim91;
  }
  if (prim92 !== undefined) {
    tmp.pauseBefore = prim92;
  }
  if (prim93 !== undefined) {
    tmp.pitch = prim93;
  }
  if (prim94 !== undefined) {
    tmp.pitchRange = prim94;
  }
  if (prim95 !== undefined) {
    tmp.playDuring = prim95;
  }
  if (prim96 !== undefined) {
    tmp.position = prim96;
  }
  if (prim97 !== undefined) {
    tmp.quotes = prim97;
  }
  if (prim98 !== undefined) {
    tmp.richness = prim98;
  }
  if (prim99 !== undefined) {
    tmp.right = prim99;
  }
  if (prim100 !== undefined) {
    tmp.size = prim100;
  }
  if (prim101 !== undefined) {
    tmp.speak = prim101;
  }
  if (prim102 !== undefined) {
    tmp.speakHeader = prim102;
  }
  if (prim103 !== undefined) {
    tmp.speakNumeral = prim103;
  }
  if (prim104 !== undefined) {
    tmp.speakPunctuation = prim104;
  }
  if (prim105 !== undefined) {
    tmp.speechRate = prim105;
  }
  if (prim106 !== undefined) {
    tmp.stress = prim106;
  }
  if (prim107 !== undefined) {
    tmp.tableLayout = prim107;
  }
  if (prim108 !== undefined) {
    tmp.textAlign = prim108;
  }
  if (prim109 !== undefined) {
    tmp.textDecoration = prim109;
  }
  if (prim110 !== undefined) {
    tmp.textIndent = prim110;
  }
  if (prim111 !== undefined) {
    tmp.textShadow = prim111;
  }
  if (prim112 !== undefined) {
    tmp.textTransform = prim112;
  }
  if (prim113 !== undefined) {
    tmp.top = prim113;
  }
  if (prim114 !== undefined) {
    tmp.unicodeBidi = prim114;
  }
  if (prim115 !== undefined) {
    tmp.verticalAlign = prim115;
  }
  if (prim116 !== undefined) {
    tmp.visibility = prim116;
  }
  if (prim117 !== undefined) {
    tmp.voiceFamily = prim117;
  }
  if (prim118 !== undefined) {
    tmp.volume = prim118;
  }
  if (prim119 !== undefined) {
    tmp.whiteSpace = prim119;
  }
  if (prim120 !== undefined) {
    tmp.widows = prim120;
  }
  if (prim121 !== undefined) {
    tmp.width = prim121;
  }
  if (prim122 !== undefined) {
    tmp.wordSpacing = prim122;
  }
  if (prim123 !== undefined) {
    tmp.zIndex = prim123;
  }
  if (prim124 !== undefined) {
    tmp.opacity = prim124;
  }
  if (prim125 !== undefined) {
    tmp.backgroundOrigin = prim125;
  }
  if (prim126 !== undefined) {
    tmp.backgroundSize = prim126;
  }
  if (prim127 !== undefined) {
    tmp.backgroundClip = prim127;
  }
  if (prim128 !== undefined) {
    tmp.borderRadius = prim128;
  }
  if (prim129 !== undefined) {
    tmp.borderTopLeftRadius = prim129;
  }
  if (prim130 !== undefined) {
    tmp.borderTopRightRadius = prim130;
  }
  if (prim131 !== undefined) {
    tmp.borderBottomLeftRadius = prim131;
  }
  if (prim132 !== undefined) {
    tmp.borderBottomRightRadius = prim132;
  }
  if (prim133 !== undefined) {
    tmp.borderImage = prim133;
  }
  if (prim134 !== undefined) {
    tmp.borderImageSource = prim134;
  }
  if (prim135 !== undefined) {
    tmp.borderImageSlice = prim135;
  }
  if (prim136 !== undefined) {
    tmp.borderImageWidth = prim136;
  }
  if (prim137 !== undefined) {
    tmp.borderImageOutset = prim137;
  }
  if (prim138 !== undefined) {
    tmp.borderImageRepeat = prim138;
  }
  if (prim139 !== undefined) {
    tmp.boxShadow = prim139;
  }
  if (prim140 !== undefined) {
    tmp.columns = prim140;
  }
  if (prim141 !== undefined) {
    tmp.columnCount = prim141;
  }
  if (prim142 !== undefined) {
    tmp.columnFill = prim142;
  }
  if (prim143 !== undefined) {
    tmp.columnGap = prim143;
  }
  if (prim144 !== undefined) {
    tmp.columnRule = prim144;
  }
  if (prim145 !== undefined) {
    tmp.columnRuleColor = prim145;
  }
  if (prim146 !== undefined) {
    tmp.columnRuleStyle = prim146;
  }
  if (prim147 !== undefined) {
    tmp.columnRuleWidth = prim147;
  }
  if (prim148 !== undefined) {
    tmp.columnSpan = prim148;
  }
  if (prim149 !== undefined) {
    tmp.columnWidth = prim149;
  }
  if (prim150 !== undefined) {
    tmp.breakAfter = prim150;
  }
  if (prim151 !== undefined) {
    tmp.breakBefore = prim151;
  }
  if (prim152 !== undefined) {
    tmp.breakInside = prim152;
  }
  if (prim153 !== undefined) {
    tmp.rest = prim153;
  }
  if (prim154 !== undefined) {
    tmp.restAfter = prim154;
  }
  if (prim155 !== undefined) {
    tmp.restBefore = prim155;
  }
  if (prim156 !== undefined) {
    tmp.speakAs = prim156;
  }
  if (prim157 !== undefined) {
    tmp.voiceBalance = prim157;
  }
  if (prim158 !== undefined) {
    tmp.voiceDuration = prim158;
  }
  if (prim159 !== undefined) {
    tmp.voicePitch = prim159;
  }
  if (prim160 !== undefined) {
    tmp.voiceRange = prim160;
  }
  if (prim161 !== undefined) {
    tmp.voiceRate = prim161;
  }
  if (prim162 !== undefined) {
    tmp.voiceStress = prim162;
  }
  if (prim163 !== undefined) {
    tmp.voiceVolume = prim163;
  }
  if (prim164 !== undefined) {
    tmp.objectFit = prim164;
  }
  if (prim165 !== undefined) {
    tmp.objectPosition = prim165;
  }
  if (prim166 !== undefined) {
    tmp.imageResolution = prim166;
  }
  if (prim167 !== undefined) {
    tmp.imageOrientation = prim167;
  }
  if (prim168 !== undefined) {
    tmp.alignContent = prim168;
  }
  if (prim169 !== undefined) {
    tmp.alignItems = prim169;
  }
  if (prim170 !== undefined) {
    tmp.alignSelf = prim170;
  }
  if (prim171 !== undefined) {
    tmp.flex = prim171;
  }
  if (prim172 !== undefined) {
    tmp.flexBasis = prim172;
  }
  if (prim173 !== undefined) {
    tmp.flexDirection = prim173;
  }
  if (prim174 !== undefined) {
    tmp.flexFlow = prim174;
  }
  if (prim175 !== undefined) {
    tmp.flexGrow = prim175;
  }
  if (prim176 !== undefined) {
    tmp.flexShrink = prim176;
  }
  if (prim177 !== undefined) {
    tmp.flexWrap = prim177;
  }
  if (prim178 !== undefined) {
    tmp.justifyContent = prim178;
  }
  if (prim179 !== undefined) {
    tmp.order = prim179;
  }
  if (prim180 !== undefined) {
    tmp.textDecorationColor = prim180;
  }
  if (prim181 !== undefined) {
    tmp.textDecorationLine = prim181;
  }
  if (prim182 !== undefined) {
    tmp.textDecorationSkip = prim182;
  }
  if (prim183 !== undefined) {
    tmp.textDecorationStyle = prim183;
  }
  if (prim184 !== undefined) {
    tmp.textEmphasis = prim184;
  }
  if (prim185 !== undefined) {
    tmp.textEmphasisColor = prim185;
  }
  if (prim186 !== undefined) {
    tmp.textEmphasisPosition = prim186;
  }
  if (prim187 !== undefined) {
    tmp.textEmphasisStyle = prim187;
  }
  if (prim188 !== undefined) {
    tmp.textUnderlinePosition = prim188;
  }
  if (prim189 !== undefined) {
    tmp.fontFeatureSettings = prim189;
  }
  if (prim190 !== undefined) {
    tmp.fontKerning = prim190;
  }
  if (prim191 !== undefined) {
    tmp.fontLanguageOverride = prim191;
  }
  if (prim192 !== undefined) {
    tmp.fontSynthesis = prim192;
  }
  if (prim193 !== undefined) {
    tmp.forntVariantAlternates = prim193;
  }
  if (prim194 !== undefined) {
    tmp.fontVariantCaps = prim194;
  }
  if (prim195 !== undefined) {
    tmp.fontVariantEastAsian = prim195;
  }
  if (prim196 !== undefined) {
    tmp.fontVariantLigatures = prim196;
  }
  if (prim197 !== undefined) {
    tmp.fontVariantNumeric = prim197;
  }
  if (prim198 !== undefined) {
    tmp.fontVariantPosition = prim198;
  }
  if (prim199 !== undefined) {
    tmp.all = prim199;
  }
  if (prim200 !== undefined) {
    tmp.glyphOrientationVertical = prim200;
  }
  if (prim201 !== undefined) {
    tmp.textCombineUpright = prim201;
  }
  if (prim202 !== undefined) {
    tmp.textOrientation = prim202;
  }
  if (prim203 !== undefined) {
    tmp.writingMode = prim203;
  }
  if (prim204 !== undefined) {
    tmp.shapeImageThreshold = prim204;
  }
  if (prim205 !== undefined) {
    tmp.shapeMargin = prim205;
  }
  if (prim206 !== undefined) {
    tmp.shapeOutside = prim206;
  }
  if (prim207 !== undefined) {
    tmp.clipPath = prim207;
  }
  if (prim208 !== undefined) {
    tmp.clipRule = prim208;
  }
  if (prim209 !== undefined) {
    tmp.mask = prim209;
  }
  if (prim210 !== undefined) {
    tmp.maskBorder = prim210;
  }
  if (prim211 !== undefined) {
    tmp.maskBorderMode = prim211;
  }
  if (prim212 !== undefined) {
    tmp.maskBorderOutset = prim212;
  }
  if (prim213 !== undefined) {
    tmp.maskBorderRepeat = prim213;
  }
  if (prim214 !== undefined) {
    tmp.maskBorderSlice = prim214;
  }
  if (prim215 !== undefined) {
    tmp.maskBorderSource = prim215;
  }
  if (prim216 !== undefined) {
    tmp.maskBorderWidth = prim216;
  }
  if (prim217 !== undefined) {
    tmp.maskClip = prim217;
  }
  if (prim218 !== undefined) {
    tmp.maskComposite = prim218;
  }
  if (prim219 !== undefined) {
    tmp.maskImage = prim219;
  }
  if (prim220 !== undefined) {
    tmp.maskMode = prim220;
  }
  if (prim221 !== undefined) {
    tmp.maskOrigin = prim221;
  }
  if (prim222 !== undefined) {
    tmp.maskPosition = prim222;
  }
  if (prim223 !== undefined) {
    tmp.maskRepeat = prim223;
  }
  if (prim224 !== undefined) {
    tmp.maskSize = prim224;
  }
  if (prim225 !== undefined) {
    tmp.maskType = prim225;
  }
  if (prim226 !== undefined) {
    tmp.backgroundBlendMode = prim226;
  }
  if (prim227 !== undefined) {
    tmp.isolation = prim227;
  }
  if (prim228 !== undefined) {
    tmp.mixBlendMode = prim228;
  }
  if (prim229 !== undefined) {
    tmp.boxDecorationBreak = prim229;
  }
  if (prim230 !== undefined) {
    tmp.boxSizing = prim230;
  }
  if (prim231 !== undefined) {
    tmp.caretColor = prim231;
  }
  if (prim232 !== undefined) {
    tmp.navDown = prim232;
  }
  if (prim233 !== undefined) {
    tmp.navLeft = prim233;
  }
  if (prim234 !== undefined) {
    tmp.navRight = prim234;
  }
  if (prim235 !== undefined) {
    tmp.navUp = prim235;
  }
  if (prim236 !== undefined) {
    tmp.outlineOffset = prim236;
  }
  if (prim237 !== undefined) {
    tmp.resize = prim237;
  }
  if (prim238 !== undefined) {
    tmp.textOverflow = prim238;
  }
  if (prim239 !== undefined) {
    tmp.grid = prim239;
  }
  if (prim240 !== undefined) {
    tmp.gridArea = prim240;
  }
  if (prim241 !== undefined) {
    tmp.gridAutoColumns = prim241;
  }
  if (prim242 !== undefined) {
    tmp.gridAutoFlow = prim242;
  }
  if (prim243 !== undefined) {
    tmp.gridAutoRows = prim243;
  }
  if (prim244 !== undefined) {
    tmp.gridColumn = prim244;
  }
  if (prim245 !== undefined) {
    tmp.gridColumnEnd = prim245;
  }
  if (prim246 !== undefined) {
    tmp.gridColumnGap = prim246;
  }
  if (prim247 !== undefined) {
    tmp.gridColumnStart = prim247;
  }
  if (prim248 !== undefined) {
    tmp.gridGap = prim248;
  }
  if (prim249 !== undefined) {
    tmp.gridRow = prim249;
  }
  if (prim250 !== undefined) {
    tmp.gridRowEnd = prim250;
  }
  if (prim251 !== undefined) {
    tmp.gridRowGap = prim251;
  }
  if (prim252 !== undefined) {
    tmp.gridRowStart = prim252;
  }
  if (prim253 !== undefined) {
    tmp.gridTemplate = prim253;
  }
  if (prim254 !== undefined) {
    tmp.gridTemplateAreas = prim254;
  }
  if (prim255 !== undefined) {
    tmp.gridTemplateColumns = prim255;
  }
  if (prim256 !== undefined) {
    tmp.gridTemplateRows = prim256;
  }
  if (prim257 !== undefined) {
    tmp.willChange = prim257;
  }
  if (prim258 !== undefined) {
    tmp.hangingPunctuation = prim258;
  }
  if (prim259 !== undefined) {
    tmp.hyphens = prim259;
  }
  if (prim260 !== undefined) {
    tmp.lineBreak = prim260;
  }
  if (prim261 !== undefined) {
    tmp.overflowWrap = prim261;
  }
  if (prim262 !== undefined) {
    tmp.tabSize = prim262;
  }
  if (prim263 !== undefined) {
    tmp.textAlignLast = prim263;
  }
  if (prim264 !== undefined) {
    tmp.textJustify = prim264;
  }
  if (prim265 !== undefined) {
    tmp.wordBreak = prim265;
  }
  if (prim266 !== undefined) {
    tmp.wordWrap = prim266;
  }
  if (prim267 !== undefined) {
    tmp.animation = prim267;
  }
  if (prim268 !== undefined) {
    tmp.animationDelay = prim268;
  }
  if (prim269 !== undefined) {
    tmp.animationDirection = prim269;
  }
  if (prim270 !== undefined) {
    tmp.animationDuration = prim270;
  }
  if (prim271 !== undefined) {
    tmp.animationFillMode = prim271;
  }
  if (prim272 !== undefined) {
    tmp.animationIterationCount = prim272;
  }
  if (prim273 !== undefined) {
    tmp.animationName = prim273;
  }
  if (prim274 !== undefined) {
    tmp.animationPlayState = prim274;
  }
  if (prim275 !== undefined) {
    tmp.animationTimingFunction = prim275;
  }
  if (prim276 !== undefined) {
    tmp.transition = prim276;
  }
  if (prim277 !== undefined) {
    tmp.transitionDelay = prim277;
  }
  if (prim278 !== undefined) {
    tmp.transitionDuration = prim278;
  }
  if (prim279 !== undefined) {
    tmp.transitionProperty = prim279;
  }
  if (prim280 !== undefined) {
    tmp.transitionTimingFunction = prim280;
  }
  if (prim281 !== undefined) {
    tmp.backfaceVisibility = prim281;
  }
  if (prim282 !== undefined) {
    tmp.perspective = prim282;
  }
  if (prim283 !== undefined) {
    tmp.perspectiveOrigin = prim283;
  }
  if (prim284 !== undefined) {
    tmp.transform = prim284;
  }
  if (prim285 !== undefined) {
    tmp.transformOrigin = prim285;
  }
  if (prim286 !== undefined) {
    tmp.transformStyle = prim286;
  }
  if (prim287 !== undefined) {
    tmp.justifyItems = prim287;
  }
  if (prim288 !== undefined) {
    tmp.justifySelf = prim288;
  }
  if (prim289 !== undefined) {
    tmp.placeContent = prim289;
  }
  if (prim290 !== undefined) {
    tmp.placeItems = prim290;
  }
  if (prim291 !== undefined) {
    tmp.placeSelf = prim291;
  }
  if (prim292 !== undefined) {
    tmp.appearance = prim292;
  }
  if (prim293 !== undefined) {
    tmp.caret = prim293;
  }
  if (prim294 !== undefined) {
    tmp.caretAnimation = prim294;
  }
  if (prim295 !== undefined) {
    tmp.caretShape = prim295;
  }
  if (prim296 !== undefined) {
    tmp.userSelect = prim296;
  }
  if (prim297 !== undefined) {
    tmp.maxLines = prim297;
  }
  if (prim298 !== undefined) {
    tmp.marqueeDirection = prim298;
  }
  if (prim299 !== undefined) {
    tmp.marqueeLoop = prim299;
  }
  if (prim300 !== undefined) {
    tmp.marqueeSpeed = prim300;
  }
  if (prim301 !== undefined) {
    tmp.marqueeStyle = prim301;
  }
  if (prim302 !== undefined) {
    tmp.overflowStyle = prim302;
  }
  if (prim303 !== undefined) {
    tmp.rotation = prim303;
  }
  if (prim304 !== undefined) {
    tmp.rotationPoint = prim304;
  }
  if (prim305 !== undefined) {
    tmp.alignmentBaseline = prim305;
  }
  if (prim306 !== undefined) {
    tmp.baselineShift = prim306;
  }
  if (prim307 !== undefined) {
    tmp.clip = prim307;
  }
  if (prim308 !== undefined) {
    tmp.clipPath = prim308;
  }
  if (prim309 !== undefined) {
    tmp.clipRule = prim309;
  }
  if (prim310 !== undefined) {
    tmp.colorInterpolation = prim310;
  }
  if (prim311 !== undefined) {
    tmp.colorInterpolationFilters = prim311;
  }
  if (prim312 !== undefined) {
    tmp.colorProfile = prim312;
  }
  if (prim313 !== undefined) {
    tmp.colorRendering = prim313;
  }
  if (prim314 !== undefined) {
    tmp.cursor = prim314;
  }
  if (prim315 !== undefined) {
    tmp.dominantBaseline = prim315;
  }
  if (prim316 !== undefined) {
    tmp.fill = prim316;
  }
  if (prim317 !== undefined) {
    tmp.fillOpacity = prim317;
  }
  if (prim318 !== undefined) {
    tmp.fillRule = prim318;
  }
  if (prim319 !== undefined) {
    tmp.filter = prim319;
  }
  if (prim320 !== undefined) {
    tmp.floodColor = prim320;
  }
  if (prim321 !== undefined) {
    tmp.floodOpacity = prim321;
  }
  if (prim322 !== undefined) {
    tmp.glyphOrientationHorizontal = prim322;
  }
  if (prim323 !== undefined) {
    tmp.glyphOrientationVertical = prim323;
  }
  if (prim324 !== undefined) {
    tmp.imageRendering = prim324;
  }
  if (prim325 !== undefined) {
    tmp.kerning = prim325;
  }
  if (prim326 !== undefined) {
    tmp.lightingColor = prim326;
  }
  if (prim327 !== undefined) {
    tmp.markerEnd = prim327;
  }
  if (prim328 !== undefined) {
    tmp.markerMid = prim328;
  }
  if (prim329 !== undefined) {
    tmp.markerStart = prim329;
  }
  if (prim330 !== undefined) {
    tmp.pointerEvents = prim330;
  }
  if (prim331 !== undefined) {
    tmp.shapeRendering = prim331;
  }
  if (prim332 !== undefined) {
    tmp.stopColor = prim332;
  }
  if (prim333 !== undefined) {
    tmp.stopOpacity = prim333;
  }
  if (prim334 !== undefined) {
    tmp.stroke = prim334;
  }
  if (prim335 !== undefined) {
    tmp.strokeDasharray = prim335;
  }
  if (prim336 !== undefined) {
    tmp.strokeDashoffset = prim336;
  }
  if (prim337 !== undefined) {
    tmp.strokeLinecap = prim337;
  }
  if (prim338 !== undefined) {
    tmp.strokeLinejoin = prim338;
  }
  if (prim339 !== undefined) {
    tmp.strokeMiterlimit = prim339;
  }
  if (prim340 !== undefined) {
    tmp.strokeOpacity = prim340;
  }
  if (prim341 !== undefined) {
    tmp.strokeWidth = prim341;
  }
  if (prim342 !== undefined) {
    tmp.textAnchor = prim342;
  }
  if (prim343 !== undefined) {
    tmp.textRendering = prim343;
  }
  if (prim344 !== undefined) {
    tmp.rubyAlign = prim344;
  }
  if (prim345 !== undefined) {
    tmp.rubyMerge = prim345;
  }
  if (prim346 !== undefined) {
    tmp.rubyPosition = prim346;
  }
  return tmp;
}

import './Slider.scss';
;

function make(prim) {
  return Gradient.Gradient(prim);
}

var Gradient$1 = {
  make: make
};

function Slider(Props) {
  var children = Props.children;
  var width = Props.width;
  var height = Props.height;
  var durationOpt = Props.duration;
  var duration = durationOpt !== undefined ? durationOpt : 10;
  return React.createElement("div", {
              style: style(undefined, "white", undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, height, undefined, undefined, undefined, undefined, undefined, undefined, undefined, "auto", undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, "hidden", undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, "relative", undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, "0 10px 20px -5px rgba(0, 0, 0, 0.125)", undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)
            }, React.createElement(make, {
                  style: style(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, "0", undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, "0", undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, "rotateZ(180deg)", undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)
                }), React.createElement("div", {
                  style: style(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, "flex", undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, "scroll " + String(duration) + "s linear infinite", undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)
                }, Belt_Array.map(Belt_Array.reduce(Belt_Array.map([
                              children,
                              children
                            ], (function (prim) {
                                return React.Children.toArray(prim);
                              })), [], Belt_Array.concat), (function (child) {
                        return React.cloneElement(child, {
                                    width: width,
                                    height: height
                                  });
                      }))), React.createElement(make, {
                  style: style(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, "0", undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, "0", undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)
                }));
}

function Slider$Image(Props) {
  var src = Props.src;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var width = widthOpt !== undefined ? widthOpt : "";
  var height = heightOpt !== undefined ? heightOpt : "";
  return React.createElement("img", {
              alt: "",
              height: height,
              src: src,
              width: width
            });
}

var $$Image = {
  make: Slider$Image
};

var make$1 = Slider;

export {
  style ,
  Gradient$1 as Gradient,
  make$1 as make,
  $$Image ,
  
}
/*  Not a pure module */
